"""Update models for organizations, users, and deals

Revision ID: ce125f9205fb
Revises: 
Create Date: 2024-11-12 17:18:23.815474

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ce125f9205fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('locations')
    with op.batch_alter_table('cars', schema=None) as batch_op:
        batch_op.add_column(sa.Column('organization_id', sa.Integer(), nullable=False))
        batch_op.alter_column('rate_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'organizations', ['organization_id'], ['organization_id'])

    with op.batch_alter_table('deals', schema=None) as batch_op:
        batch_op.alter_column('car_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('rate_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_constraint('deals_organization_id_fkey', type_='foreignkey')
        batch_op.drop_column('organization_id')

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('address', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('city', sa.String(length=50), nullable=False))
        batch_op.alter_column('organization_name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('fio_director',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.drop_constraint('organizations_location_id_fkey', type_='foreignkey')
        batch_op.drop_column('location_id')

    with op.batch_alter_table('rates', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('passport_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('date_of_birth', sa.Date(), nullable=False))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('fio',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('fio',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('date_of_birth')
        batch_op.drop_column('passport_number')

    with op.batch_alter_table('rates', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('organizations_location_id_fkey', 'locations', ['location_id'], ['location_id'])
        batch_op.alter_column('fio_director',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('organization_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.drop_column('city')
        batch_op.drop_column('address')

    with op.batch_alter_table('deals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('deals_organization_id_fkey', 'organizations', ['organization_id'], ['organization_id'])
        batch_op.alter_column('start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('rate_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('car_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('cars', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('rate_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('organization_id')

    op.create_table('locations',
    sa.Column('location_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('location_id', name='locations_pkey')
    )
    # ### end Alembic commands ###
